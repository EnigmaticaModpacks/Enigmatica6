{
	id: "5E2F0BAE050252A8"
	group: "72A9465344128AF9"
	order_index: 8
	filename: "computercraft_tweaked"
	title: "ComputerCraft: Tweaked"
	icon: "computercraft:computer_normal"
	subtitle: ["Lua Tutorial \\& Introduction to the mod!"]
	default_quest_shape: ""
	default_hide_dependency_lines: false
	quests: [
		{
			title: "Lets have some fun with Computers!"
			x: 0.0d
			y: 0.0d
			shape: "square"
			subtitle: "Wait there are Computers in Minecraft?!"
			description: [
				"Welcome to the crazy world of programming! ComputerCraft: Tweaked is a mod entirely focused about that one thing, giving you access to amazing Lua Programming language inside of Minecraft!"
				""
				"It's incredible how compact and complicated stuff you can do with this mod. Think about automating Create Mechanical Crafter with only 1 block!?! Or doing complex operating system controlling everything you have in your base. "
				""
				"Think about anything, this mod can do it!"
				""
				"Those quests are meant to showcase the mod, and teach you, fellow Player, Basics of Basics with Lua and how to start learning more!"
				""
				"~~Kanzio"
			]
			size: 2.0d
			optional: true
			min_width: 250
			id: "2D79E4D126EE389E"
			tasks: [{
				id: "300A40F0F0E6E4B2"
				type: "item"
				item: "computercraft:computer_normal"
			}]
			rewards: [{
				id: "7CFA1D5619B10CC1"
				type: "item"
				item: "computercraft:monitor_normal"
				count: 9
			}]
		}
		{
			title: "Advanced Computer"
			x: -2.5d
			y: -1.0d
			subtitle: "Shiny."
			description: [
				"This fancy gold plated computer has a tiny bit more to offer than his old gray ancestor."
				""
				"Except for the fact that it looks nicer, it has more disk space available for you and has color support!"
				""
				"Colors don't matter for us however, as we aren't gonna do OS in this tutorial, but it's good to know its a thing right?"
			]
			dependencies: ["2D79E4D126EE389E"]
			dependency_requirement: "all_started"
			id: "5E9975407F07DBCE"
			tasks: [{
				id: "2C0D62579BA499E8"
				type: "item"
				item: "computercraft:computer_advanced"
			}]
			rewards: [{
				id: "72295CD458441BE8"
				type: "item"
				item: "computercraft:monitor_advanced"
				count: 9
			}]
		}
		{
			title: "Peripherals"
			icon: "rftoolscontrol:graphics_card"
			x: -5.0d
			y: 0.0d
			subtitle: "There is something more than Computers?!"
			description: [
				"ComputerCraft: Tweaked has a lot peripherals that are really useful for doing anything!"
				""
				"This section will show you all peripherals available and how to use their APIs."
			]
			dependencies: ["2D79E4D126EE389E"]
			hide: true
			size: 1.25d
			id: "378BEFB62C4F98BF"
			tasks: [{
				id: "4231A52D1EB86805"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "40472804F00CBB98"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Advanced Peripherals"
			x: -6.5d
			y: -4.5d
			subtitle: "Stuff you need for any sort of automation!"
			description: [
				"Advanced Peripherals is an addon for ComputerCraft: Tweaked that adds massive amount of functionality to it with just few simple blocks!"
				""
				"Check individual quests for any peripheral from this mod to see what it's doing and how to use it!"
				"TODO: Link to official Advanced Peripherals WIKI"
			]
			dependencies: ["378BEFB62C4F98BF"]
			id: "6AA1236C9946F569"
			tasks: [{
				id: "56A45A4FCA54436D"
				type: "item"
				item: "advancedperipherals:peripheral_casing"
			}]
			rewards: [{
				id: "6A25D30D59AEE169"
				type: "item"
				item: "advancedperipherals:peripheral_casing"
			}]
		}
		{
			x: -4.5d
			y: -4.0d
			subtitle: "Lua Basics: Enviroment Detector API"
			dependencies: ["6AA1236C9946F569"]
			id: "643882E2974E1FC4"
			tasks: [{
				id: "5E945D7A74276756"
				type: "item"
				item: "advancedperipherals:environment_detector"
			}]
		}
		{
			x: -5.0d
			y: -3.0d
			subtitle: "Lua Basics: Chat API"
			description: [
				"The Chat Box is used to read and write messages to the in-game chat. You can even choose if you want to send it to everyone or just one/few people!"
				""
				"ProTip: If you prefix your message with \"$\" it will be invisible in game, but chatbox will still be able to see it."
				""
				"Functions:"
				"sendMessage(#1, #2)"
				"#1 -> String message you wanna send"
				"#2 -> String Nickname. Its gonna add [your_input] before message"
			]
			dependencies: ["6AA1236C9946F569"]
			min_width: 350
			id: "69538FA96C5DB66F"
			tasks: [{
				id: "5BDA5C07EECA1E62"
				type: "item"
				item: "advancedperipherals:chat_box"
			}]
		}
		{
			x: -6.0d
			y: -6.5d
			subtitle: "Lua Basics: Player Detector API"
			dependencies: ["6AA1236C9946F569"]
			id: "1FF23101B4AE771A"
			tasks: [{
				id: "21D3EBCD9EE314C8"
				type: "item"
				item: "advancedperipherals:player_detector"
			}]
		}
		{
			x: -8.0d
			y: -3.0d
			subtitle: "Lua Basics: RS Bridge API"
			dependencies: ["6AA1236C9946F569"]
			id: "29391D18C88CE860"
			tasks: [{
				id: "0936AC03B35A6BC1"
				type: "item"
				item: "advancedperipherals:rs_bridge"
			}]
		}
		{
			x: -8.5d
			y: -4.0d
			subtitle: "Lua Basics: Energy Detector API"
			dependencies: ["6AA1236C9946F569"]
			id: "5A981BAE9C143E66"
			tasks: [{
				id: "7190E44C0775FA32"
				type: "item"
				item: "advancedperipherals:energy_detector"
			}]
		}
		{
			icon: "advancedperipherals:ar_controller"
			x: -7.0d
			y: -6.5d
			subtitle: "Lua Basics: AR Controller API"
			dependencies: ["6AA1236C9946F569"]
			id: "0CA53F24B5D6FAC7"
			tasks: [
				{
					id: "2B4D966DC13F3779"
					type: "item"
					item: "advancedperipherals:ar_controller"
				}
				{
					id: "1A7C3F19B5A0DFBD"
					type: "item"
					item: {
						id: "advancedperipherals:ar_goggles"
						Count: 1b
						tag: {
							Damage: 0
						}
					}
				}
			]
		}
		{
			x: -8.5d
			y: -5.0d
			subtitle: "Lua Basics: Inventory Manager API"
			dependencies: ["6AA1236C9946F569"]
			id: "63E3AF5B3F755AAB"
			tasks: [{
				id: "4C86ADCC2F1F1AF0"
				type: "item"
				item: "advancedperipherals:inventory_manager"
			}]
		}
		{
			x: -7.0d
			y: -2.5d
			subtitle: "Lua Basics: Redstone API"
			description: [
				"The Redstone Integrator is used to Emit / Read redstone signals in the world."
				""
				"Functions:"
				"TODO: Add better Function explenation"
			]
			dependencies: ["6AA1236C9946F569"]
			id: "78DDFBC9534A6310"
			tasks: [{
				id: "2F43BBCBD9F69B8F"
				type: "item"
				item: "advancedperipherals:redstone_integrator"
			}]
		}
		{
			x: -4.5d
			y: -5.0d
			subtitle: "Lua Basics: Block Reader API"
			dependencies: ["6AA1236C9946F569"]
			id: "44A95D62FE28D5A4"
			tasks: [{
				id: "0A711582592CA015"
				type: "item"
				item: "advancedperipherals:block_reader"
			}]
		}
		{
			x: -5.0d
			y: -6.0d
			subtitle: "Lua Basics: Geo Scanner API"
			dependencies: ["6AA1236C9946F569"]
			id: "3C2ED0224A637626"
			tasks: [{
				id: "28460122A0E940ED"
				type: "item"
				item: "advancedperipherals:geo_scanner"
			}]
		}
		{
			x: -8.0d
			y: -6.0d
			dependencies: ["6AA1236C9946F569"]
			id: "064DB44EB6A2DF89"
			tasks: [{
				id: "7C219A8F15FC0AC0"
				type: "item"
				item: "advancedperipherals:nbt_storage"
			}]
		}
		{
			title: "Pocket Computers"
			x: -2.5d
			y: 1.0d
			subtitle: "Cookie Clicker in your Pocket all the time!"
			description: [
				"There are item versions of computers as well. Maybe they aren't so useful with automating stuff, but with some knowledge you can create a pocket Cookie Clicker game for example!"
				""
				"However they are really useful for remote access to your systems, or for playing games all the time you have to build stuff."
			]
			dependencies: ["2D79E4D126EE389E"]
			id: "52933D3422727EB3"
			tasks: [{
				id: "7169C85D653C1F03"
				type: "item"
				title: "Pocket Computers"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "computercraft:pocket_computer_normal"
								Count: 1b
							}
							{
								id: "computercraft:pocket_computer_advanced"
								Count: 1b
							}
						]
					}
				}
			}]
			rewards: [{
				id: "5E5F846DAF5BCE71"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "About Peripherals in General"
			icon: "minecraft:chest"
			x: -7.5d
			y: 0.0d
			shape: "circle"
			subtitle: "Lua Basics: Peripheral API"
			description: [
				"In general, a Peripheral is any block you could think of. Classic Minecraft Chest or Furnace, Drawer, Mekanism Metallurgic Infuser, anything!"
				""
				"In ComputerCraft: Tweaked, to use any peripheral you need to wrap / find it first. You could set it to a local variable to be able to just use name you gave it in the code."
				""
				"Functions:"
				"peripheral.wrap(\"#1\")"
				"#1 -> side of the PC or name of the peripheral you want to wrap!"
				"It returns a table with all functions for that specific peripheral. Thanks to that you can use peripheral specific commands on peripheral you just wrapped."
				""
				"peripheral.find(\"#1\",\"#2\")"
				"#1 -> The type of peripheral you are looking for."
				"#2 -> Filter [Optional]. Requires function to work."
				"It returns a table with all founded peripherals, that pass Filter requirements. Filter needs function that returns True/False for it to filter, but can also be used to run commands on every peripheral that was founded!"
				""
				"peripheral.getName(#1)"
				"#1 -> Peripheral you want to get name of."
				"getName is really useful command used a lot in ComputerCraft, a lot of commands (mostly for moving stuff from one inventory to another) requires you to give them \"Name\" of the peripheral, and not a table that wrap / find gives you. This takes what wrap / find returns and gives the Name of that peripheral!"
				""
				"For more information look up ComputerCraft: Tweaked Wiki!"
				"TODO: Rewrite this API Usage."
			]
			dependencies: ["378BEFB62C4F98BF"]
			hide: true
			min_width: 350
			id: "55493D823F7403DA"
			tasks: [{
				id: "0F3C08C74B6E61C1"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "1FEB3FACFB702936"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Inventory API"
			icon: "minecraft:barrel"
			x: -9.5d
			y: -1.0d
			subtitle: "Lua Basics: Global Inventory API"
			description: [""]
			dependencies: ["55493D823F7403DA"]
			hide: true
			id: "4D55FB33758DEF7D"
			tasks: [{
				id: "3EC51CC783415B4A"
				type: "item"
				item: "minecraft:barrel"
			}]
			rewards: [{
				id: "76AFEDBB3D2A3334"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Liquid API"
			icon: "minecraft:water_bucket"
			x: -9.5d
			y: 0.0d
			subtitle: "Lua Basics: Global Liquid API"
			dependencies: ["55493D823F7403DA"]
			hide: true
			id: "18C25A983C4831B7"
			tasks: [{
				id: "7C6525BE6C8CA991"
				type: "item"
				title: "Black Hole Tanks"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "industrialforegoing:common_black_hole_tank"
								Count: 1b
							}
							{
								id: "industrialforegoing:pity_black_hole_tank"
								Count: 1b
							}
							{
								id: "industrialforegoing:simple_black_hole_tank"
								Count: 1b
							}
							{
								id: "industrialforegoing:advanced_black_hole_tank"
								Count: 1b
							}
							{
								id: "industrialforegoing:supreme_black_hole_tank"
								Count: 1b
							}
						]
					}
				}
			}]
			rewards: [{
				id: "6F5EDC40C986AE57"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Energy API"
			icon: "mekanism:basic_energy_cube"
			x: -9.5d
			y: 1.0d
			subtitle: "Lua Basics: Global Energy API"
			dependencies: ["55493D823F7403DA"]
			hide: true
			id: "7CD446B77ACA29F7"
			tasks: [{
				id: "0085C0BFFF01C3DD"
				type: "item"
				title: "Energy Cells"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "powah:energy_cell_basic"
								Count: 1b
							}
							{
								id: "powah:energy_cell_hardened"
								Count: 1b
							}
							{
								id: "powah:energy_cell_blazing"
								Count: 1b
							}
							{
								id: "powah:energy_cell_spirited"
								Count: 1b
							}
							{
								id: "powah:energy_cell_niotic"
								Count: 1b
							}
							{
								id: "powah:energy_cell_nitro"
								Count: 1b
							}
						]
					}
				}
			}]
		}
		{
			title: "ComputerCraft Peripherals"
			icon: "computercraft:pocket_computer_normal"
			x: -6.5d
			y: 4.5d
			subtitle: "Wait there is even more?"
			description: ["ComputerCraft: Tweaked adds on its own a few unique peripherals. Some of them aren't as useful as others, but all of them are worth attention."]
			dependencies: ["378BEFB62C4F98BF"]
			id: "1580D9FD06937ABB"
			tasks: [{
				id: "4816E5D3E5C6E0D2"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "3D0E9BD8DB101174"
				type: "xp"
				xp: 100
			}]
		}
		{
			x: -7.0d
			y: 6.0d
			subtitle: "Lua Basics: Monitor \\& term functions"
			dependencies: ["1580D9FD06937ABB"]
			id: "54E1A1FE032B1363"
			tasks: [{
				id: "5472E9F8815DEF4E"
				type: "item"
				title: "Monitors"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "computercraft:monitor_advanced"
								Count: 1b
							}
							{
								id: "computercraft:monitor_normal"
								Count: 1b
							}
						]
					}
				}
			}]
		}
		{
			x: -7.5d
			y: 3.0d
			dependencies: ["1580D9FD06937ABB"]
			id: "582FF2D81252AC77"
			tasks: [{
				id: "0BB37782A3276ACB"
				type: "item"
				item: "computercraft:speaker"
			}]
		}
		{
			x: -8.0d
			y: 4.0d
			dependencies: ["1580D9FD06937ABB"]
			id: "0C3CF3165304BB22"
			tasks: [
				{
					id: "4210C15D0320BE3E"
					type: "item"
					item: "computercraft:disk_drive"
				}
				{
					id: "679CA9A8D8852B7A"
					type: "item"
					title: "Floppy Disk"
					item: {
						id: "itemfilters:id_regex"
						Count: 1b
						tag: {
							value: "computercraft:disk$"
						}
					}
				}
			]
		}
		{
			icon: "computercraft:printer"
			x: -6.0d
			y: 6.0d
			dependencies: ["1580D9FD06937ABB"]
			id: "181772F6C62A4EEF"
			tasks: [
				{
					id: "1DCFA115E667AFAE"
					type: "item"
					item: "computercraft:printer"
				}
				{
					id: "6ADDB5B991464F08"
					type: "item"
					item: "minecraft:paper"
					count: 8L
				}
			]
		}
		{
			x: -5.0d
			y: 5.5d
			dependencies: ["1580D9FD06937ABB"]
			id: "229E3C141CF5DCA7"
			tasks: [{
				id: "348DDB1AB24A6234"
				type: "item"
				title: "Turtles"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "computercraft:turtle_advanced"
								Count: 1b
							}
							{
								id: "computercraft:turtle_normal"
								Count: 1b
							}
						]
					}
				}
			}]
		}
		{
			x: -8.0d
			y: 5.0d
			dependencies: ["1580D9FD06937ABB"]
			id: "162927942501A25B"
			tasks: [
				{
					id: "2F30CD36EFF93C50"
					type: "item"
					title: "Wired Modem"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:wired_modem"
									Count: 1b
								}
								{
									id: "computercraft:wired_modem_full"
									Count: 1b
								}
							]
						}
					}
				}
				{
					id: "64A1A1464DB5212B"
					type: "item"
					item: "computercraft:cable"
				}
			]
			rewards: [
				{
					id: "313128DA796725C5"
					type: "item"
					item: "computercraft:cable"
					count: 16
				}
				{
					id: "64EBD65FFC3C660D"
					type: "item"
					item: "computercraft:wired_modem_full"
					count: 2
				}
			]
		}
		{
			x: -9.5d
			y: 4.5d
			subtitle: "No More Cables!"
			description: [""]
			dependencies: ["162927942501A25B"]
			id: "4CD43BE714CAE6D8"
			tasks: [{
				id: "0FF6E410A7B9EE4D"
				type: "item"
				title: "Wireless Modem"
				item: {
					id: "itemfilters:or"
					Count: 1b
					tag: {
						items: [
							{
								id: "computercraft:wireless_modem_advanced"
								Count: 1b
							}
							{
								id: "computercraft:wireless_modem_normal"
								Count: 1b
							}
						]
					}
				}
			}]
		}
		{
			title: "Documentation"
			icon: "akashictome:tome"
			x: 2.25d
			y: 2.25d
			shape: "pentagon"
			subtitle: "Official Wikis for everything."
			description: [
				"If you want to learn even more, or need something that isn't here, check out those links."
				""
				"These are official docs to the Lua Programming Language, as well as to ComputerCraft: Tweaked Wiki and Mekanism integration."
				"TODO: clickable links or message on chat"
			]
			dependencies: ["2D79E4D126EE389E"]
			size: 1.5d
			id: "508989B512DBB2A2"
			tasks: [{
				id: "0ED4FB7A29E8557D"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "6585C24F9B348B68"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Challenges"
			icon: "computercraft:computer_command"
			x: 2.0d
			y: 4.75d
			shape: "gear"
			subtitle: "Try yourself!"
			description: [
				"Here are some easy challenges you could try completing to test what you learned so far. For every challenge you will get a small prize :D"
				""
				"However at the end, there are few challenges you could not be able to finish without deeper understanding of Lua, so don't care too much about those if you aren't able to finish. There are here for those handful of people that know what there are doing ^^\""
			]
			hide: true
			size: 1.5d
			min_width: 250
			id: "777349A29491AE4C"
			tasks: [{
				id: "695699FD194967F9"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "4E84EC1B07DF8EA7"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Your first program!"
			icon: "computercraft:printed_page"
			x: 2.0d
			y: 6.0d
			subtitle: "Challenge #1"
			description: ["Make a program that will type on the monitor every 5 seconds phrase \"My First Program!\""]
			dependencies: ["777349A29491AE4C"]
			hide: true
			id: "7F980AC22498FE44"
			tasks: [
				{
					id: "194470FBF6D30D4B"
					type: "checkmark"
					title: "Got it working!"
				}
				{
					id: "37AC0AFD18F38CF9"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
				{
					id: "131814BA2E6573DB"
					type: "item"
					title: "Monitor"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:monitor_normal"
									Count: 1b
								}
								{
									id: "computercraft:monitor_advanced"
									Count: 1b
								}
							]
						}
					}
				}
			]
			rewards: [{
				id: "2F6F8FDD1C50F2A4"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Item Transfer!"
			icon: "mekanism:basic_mechanical_pipe"
			x: 1.5d
			y: 7.0d
			subtitle: "Challenge #2"
			description: ["Make a program that will transfer items from inventory on the left to inventory on the right."]
			dependencies: ["7F980AC22498FE44"]
			hide: true
			id: "06A8B69F9385388B"
			tasks: [
				{
					id: "1DD8D1520D86E71D"
					type: "checkmark"
					title: "Got it working!"
				}
				{
					id: "29E0DE505929241E"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
				{
					id: "5C9E09235719EFE2"
					type: "item"
					title: "Inventory"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "minecraft:chest"
									Count: 1b
								}
								{
									id: "minecraft:barrel"
									Count: 1b
								}
							]
						}
					}
					count: 2L
				}
			]
		}
		{
			title: "Using Peripherals to interract with RS"
			icon: "refinedstorage:disk_drive"
			x: -0.5d
			y: 7.0d
			subtitle: "Challenge #3"
			description: ["Use Advanced Peripherals to export some items from RS into a chest."]
			dependencies: ["06A8B69F9385388B"]
			hide: true
			id: "0F004D494E6114E8"
			tasks: [
				{
					id: "7F89261D56AFCC98"
					type: "checkmark"
					title: "Got it working!"
				}
				{
					id: "6375843352BB76C2"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
				{
					id: "5299FCDEF5D01998"
					type: "item"
					item: "advancedperipherals:rs_bridge"
				}
				{
					id: "325807DC4DDF3807"
					type: "item"
					title: "Inventory"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "minecraft:chest"
									Count: 1b
								}
								{
									id: "minecraft:barrel"
									Count: 1b
								}
							]
						}
					}
				}
			]
			rewards: [
				{
					id: "09A23C581CD60BAE"
					type: "item"
					item: "refinedstorage:cable"
					count: 8
				}
				{
					id: "3F3E6C99F3DCDB19"
					type: "item"
					item: "refinedstorage:exporter"
				}
			]
		}
		{
			title: "Coding Tips"
			icon: "create:wrench"
			x: 3.125d
			y: 0.0d
			shape: "gear"
			subtitle: "Enough of in-game coding? There is a solution!"
			description: [
				"I think after a while of editing in game, you know it's really annoying to use it, but don't worry fellow player, you don't need to use it anymore!"
				""
				"You can just drag \\& drop files into minecraft itself!"
				"You just have to create a file on your desktop, code in it and rename it onto [your_name].lua, drop it into in-game Computer and run it. It's that easy ^^"
				""
				"If you want to have proper Lua support and checking, you can install Visual Studio Code and ComputerCraft: Tweaked Plugin for full ComputerCraft Lua support! Link to that Plugin is in wiki of that quest"
				"TODO: some sort of link to CC: Tweaked Plugin for Visual Studio Code and mention of the Directiories etc"
			]
			dependencies: [
				"2D79E4D126EE389E"
				"0829D34C8A1B13FA"
			]
			hide: true
			size: 1.25d
			min_width: 275
			id: "5D796A237D7164E5"
			tasks: [{
				id: "77723B672ED12F16"
				type: "item"
				item: "emendatusenigmatica:iron_gear"
				consume_items: true
			}]
			rewards: [{
				id: "2545BD1A22D53A17"
				type: "custom"
				title: "Links to Wikis [Not working yet]"
			}]
		}
		{
			title: "Introduction to Lua"
			icon: "computercraft:printed_book"
			x: 2.25d
			y: -2.25d
			shape: "hexagon"
			subtitle: "Lua Basics #0 - Introduction"
			description: [
				"Welcome to Lua fellow Player!"
				""
				"Lua is one of many coding languages out there, but it's one of the easiest ones. Don't think that it means that it is worse than others!"
				""
				"Its a pretty powerful, but simple language, so simple that it can be implemented into other games."
				"That doesn't mean that it's only used in this application. There are a lot of games coded on Lua, that are pretty neat and popular (The Binding of Isaac for example)."
				""
				"In this tutorial I'll try to teach you the basics of basics of Lua, so you can try doing your own automation projects with it."
			]
			dependencies: ["2D79E4D126EE389E"]
			size: 1.5d
			min_width: 275
			id: "44029061DB640AE2"
			tasks: [{
				id: "6A987EA5C795264E"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [
				{
					id: "57B6FB2AFCE06284"
					type: "command"
					auto: "invisible"
					command: "/tellraw @p {\"text\":\"Have fun with Lua fellow player! ~~Kanzio\",\"color\":\"green\"}"
					player_command: false
				}
				{
					id: "18992EE31345E7F5"
					type: "xp"
					xp: 100
				}
			]
		}
		{
			title: "Modem action!"
			icon: "computercraft:wired_modem_full"
			x: 0.5d
			y: 7.0d
			subtitle: "Challenge #4"
			description: ["Use a wired Modem to interract with barrel, and print on the monitor list of items in it."]
			dependencies: ["0F004D494E6114E8"]
			hide: true
			id: "44A7E0342E80526D"
			tasks: [
				{
					id: "0F44049652DDBB03"
					type: "checkmark"
					title: "Got it working!"
				}
				{
					id: "2A24265C5169E9C8"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
				{
					id: "7466E2D8E41A02F5"
					type: "item"
					item: "minecraft:barrel"
				}
				{
					id: "7141C9C70784F055"
					type: "item"
					title: "Wired Modem"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:wired_modem"
									Count: 1b
								}
								{
									id: "computercraft:wired_modem_full"
									Count: 1b
								}
							]
						}
					}
					count: 2L
				}
				{
					id: "3BAA23CEA19F1FC1"
					type: "item"
					item: "computercraft:cable"
					count: 8L
				}
			]
			rewards: [
				{
					id: "673964E9361F0DF7"
					type: "item"
					item: "computercraft:wired_modem_full"
					count: 2
				}
				{
					id: "5A2D6DA14896628E"
					type: "item"
					item: "computercraft:cable"
					count: 16
				}
			]
		}
		{
			title: "Wireless communications!"
			icon: "computercraft:wireless_modem_normal"
			x: 1.0d
			y: 8.0d
			subtitle: "Challenge #4.2"
			description: [
				""
				"TODO: Learn actually how to use Wireless modems in they intended use, then do that challenge"
			]
			dependencies: ["44A7E0342E80526D"]
			hide: true
			id: "70C1723A18F89BD9"
			tasks: [{
				id: "0F69F5424C241DC3"
				type: "checkmark"
				title: "Got it working!"
			}]
		}
		{
			title: "Variables and their types"
			icon: "computercraft:printed_pages"
			x: 5.5d
			y: -3.5d
			shape: "diamond"
			subtitle: "Lua Basics #1 - Variables"
			description: [
				"Lets start out with basics of basics shall we?"
				""
				"Variables are a place in the memory, where you can store data. Like a file, they have their own name, that you can use to interract with them. This is the most important thing in every programming language, because without those, you wouldn't be able to store and use any data at all in the program!"
				""
				"The way variables work is pretty simple, you set the name for it, and optionally you set what data it stores."
				""
				"> local my_first_variable = 0"
				""
				"● \"local\" is a function for creating new variables. \"My_First_Variable\" is the variable's name, that is first argument! Get used to that word, because every function has one or more of them."
				"● Second \"argument\" is a data you want to store in that variable. Its optional, that means you can just leave it empty and variable will still be created, but when you are gonna try reading it, it will return \"nil\"."
				"(Important note: You can't write \"local x =\" when you want to create empty variable. You need to use \"local x\" or \"local x = nil\" where x is your's variable name)"
				""
				"Now to read your variable, you just simply use the name of your variable. It will give to the function data it contains (value). You can't read variables in any other place than function's argument! However for demonstration purposes, I will showcase variable's value like that:"
				""
				"> 0 -> my_first_variable"
				""
				"Only time it will function differently is when you want to change data it stores. Lets say we don't want our variable to store 0, we want it to store Enigmatica 6, how we can do that? To change value of variable, you simply overwrite it. That means you are deleting old value of variable, and putting new data in its place. To do that, you just simply use variable's name and set new value!"
				""
				"> my_first_variable = \"Enigmatica 6\""
				"> \"Enigmatica 6\" -> my_first_variable"
				""
				"\"But what does \"nil\" mean and why there are quotation marks near Enigmatica 6?\" - So there are few types of variables, and every of them have its own unique rules. Check \"Lua Basics #1 - Variable types\" above this quest for more information about those."
			]
			dependencies: ["44029061DB640AE2"]
			hide: true
			size: 1.25d
			min_width: 400
			id: "29C780353E7FB720"
			tasks: [{
				id: "282439D423FAC52F"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "5FC3C88315F15ABA"
				type: "xp"
				xp: 100
			}]
		}
		{
			title: "Type: Table"
			icon: "computercraft:printed_page"
			x: 3.65d
			y: -4.8d
			subtitle: "Lua Basics #1 - Variable types"
			description: ["TODO: Do it actually ^^\" Tables are actually hard to explain, so thats off for later"]
			dependencies: ["29C780353E7FB720"]
			id: "152F6E8D35D2069A"
			tasks: [{
				id: "124F45AFAA7A0206"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Type: Boolean"
			icon: "computercraft:printed_page"
			x: 3.0d
			y: -4.0d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"Boolean is the easiest type in every programming language. It can have 2 states, \"True\" and \"False\"."
				""
				"Its really useful in situations where you need to check if something is True, or False. Example:"
				"● You need to know if there is a chest on the left of the PC. If there is a chest, it's \"True\", if there is not, it's \"False\""
				""
				"A lot of functions are returning a boolean variable after they ended they work, it is useful to check for that output to see if what you wanted to do was actually done."
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 250
			id: "182654F933DE1815"
			tasks: [{
				id: "32D28AB681CE8601"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Type: Function"
			icon: "computercraft:printed_page"
			x: 4.5d
			y: -5.4d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"You already heard of the word \"function\" a few times in this quest line, but did you know its also one of the variable types?"
				"Function is a variable that doesn't store data, it stores other functions and variables in it, that you can use in other place with just the name of that function. Pretty convenient isn't it?"
				""
				"As every variable, you can change its value later on to whatever you want. Yes that means you can edit some of Lua Functions and other APIs, but it will break stuff most of the time :sweat_smile:"
				"API is set of functions you can use to interract with stuff that uses that API. For example to interract with monitor of the PC, you need to use API that has functions to do that. How to use APIs will be later."
				""
				"Now lets see how to use functions."
				"For you to call (In other words, use) function, you need to simply type its name with 2 brackets. Between those are function's arguments."
				""
				"> print(string) -- Basic function to write text on the screen. Has one argument."
				""
				"In my case I called print(). Some of the functions doesn't require you to give them arguments, they can even don't have any of them, but there can be functions that require from you even 10 arguments. Crazy isn't it?!"
				"In our case, print() requires as it's first and only argument some string (Read \"Type: String\" quest to know what string is)"
				"So example usage of print() would look like this:"
				""
				"> print(\"This is a test!\") -- Writes on the screen --> This is a test!"
				""
				"As you can use variables in place of function's arguments, you can use functions as argument as well! Most of the functions return something, if its a table with stuff they found, or just boolean if they were able to do what they need to. They can even return other function! To use function as the argument, you just write it as you would normally, but in the argument of other function."
				""
				"> print(my_function(1)) -- It will print what my_function will return."
				""
				"There is also a way to pass the function, that is useful sometimes and should be used with functions that doesn't require any arguments. To pass a function, you simply write its name but without brackets! However its not that useful in our usage, and until you will not go deeper into Lua coding, you will probably never use it."
				""
				"For more about Functions, and how to create them, check Lua Basics #2."
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 450
			id: "7B00ECCC48DA0445"
			tasks: [{
				id: "20F5794B8753B648"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Type: String"
			icon: "computercraft:printed_page"
			disable_toast: true
			x: 7.35d
			y: -4.8d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"String is a type of variable that stores a sequence of characters. You can type here anything, binary code (Binary - Code using ones and zeros), your name, entire address or your homework :wink:"
				""
				"● Strings need to be written between double quotes to be valid, otherwise program will think its the name of variable!"
				""
				"> local my_first_string = \"Hello Player\" -- Valid string"
				"> local my_first_string = Hello Player -- Not valid, program will think those are two variables"
				""
				"● Strings can not be modified, but you can do a copy of them with a modification you want to do."
				"> local test_string = \"This is a test\""
				"> local test_string_edited = string.gsub(test_string, \"test\", \"Test!\", 1)"
				"> \"This is a Test!\" -> test_string_edited"
				""
				"● string.gsub is one of few ways you can edit your strings. First argument takes the string / variable you want to edit, second one what \"characters\" you want to change, and third one takes what you want to put in that place."
				"There is fourth argument (Optional) that tells the program which occurance of those characters to change. If, for example, we would have 2 \"test\" in our string, with number you can set which one to edit! In our case it would edit the first one."
				""
				"● There is also a way to add some text at the end of your string. This time you can \"edit\" the initial string by overwriting it, but its sometimes useful to have it as seperate variables."
				"To add some text at the end of your string, you use 2 dots between 2 strings you want to add together:"
				"> local string_1 = \"Hello \""
				"> local string_2 = \"there!\""
				"> string_1 = string_1 .. string_2"
				"(Note: string_2 can be replaced by non-string variable if it can be converted to string)"
				"> \"Hello there!\" -> string_1"
				""
				"There is also a few different ways to modify your strings, and to format them, however those aren't as useful, and can be found in Lua docs!"
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 400
			id: "32B8B586F03321A7"
			tasks: [{
				id: "32E1201F35F1A394"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Type: Number"
			icon: "computercraft:printed_page"
			x: 6.5d
			y: -5.4d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"Number is a type of variable to store numbers. Yes literally :sweat_smile:"
				""
				"Numbers should be written without any other characters to be valid and recognised as number:"
				"> local my_first_number = 6"
				"> 6 -> my_first_number"
				""
				"● There are few exceptions however, as you can do single and double precision numbers as well. For that you just use a dot:"
				"> local some_number = 1.54"
				"● You can also write numbers in scientific notation (example: 5e20), but personally I wouldn't recommend that unless you know what you are doing."
				""
				"Lua supports the usual arithemitcs operators:"
				"+ -> Addition"
				"- -> Substraction"
				"* -> Multiplication"
				"/ -> Division"
				""
				"Its really simple to use them, you just write between two numbers operator you want to use:"
				"> local add = 6 + 10"
				"> 16 -> add"
				""
				"Unfortunately Lua doesn't support anything else than those 4 basic operators, for anything else that you want, you will need to write the function yourself. For creating functions check out Function type in Lua Basics #1"
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 400
			id: "08E925A9223FC1BF"
			tasks: [{
				id: "56800F53C736541F"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Variable Tips \\& Tricks"
			icon: "computercraft:printed_page"
			x: 5.5d
			y: -2.0d
			subtitle: "Lua Basics #1 - Variable tips \\& tricks"
			description: [
				"Variable naming:"
				"For setting variable's name, its important to know few things:"
				""
				"● Lua is \"capital sensitive\". It means that variables with name \"test\" and \"TEST\" are two different variables! "
				""
				"● Variable's name can't be longer than 64 characters"
				""
				"● Variable's name can't start with a number and can't have any spaces:"
				"> local test_1 -- Variable named correctly"
				"> local 1_test -- Variable named incorrectly, will not work"
				"> local test 1 -- Variable named incorrectly, will not work"
				""
				"● You should name variables in a way that they represent theirs use:"
				"> local day = \"Monday\""
				"> local x123 = \"Monday\""
				"Both of those are used by me to store day of the week, but first one is named with its purpose in mind, other one is just random thing. They both will work, however if you are trying to do more advanced program, random names like x123 are gonna mess with you really quickly."
				""
				"General tips \\& tricks:"
				""
				"● You can create few variables at the same time! You just simply type two or more names after \"local\" and seperate them with comma. You can even set in the same way unique value for every variable."
				"> local x, y, z = 1, 2, 3"
				"> 1 -> x    /   2 -> y   /   3 -> z"
				""
				"Dev Note: Remember to check this out later on and think if you didn't forget anything important ^^\""
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 400
			id: "0944D4C1A4E3C8F3"
			tasks: [{
				id: "00E1D2866C886632"
				type: "checkmark"
				title: "Got it!"
			}]
			rewards: [{
				id: "5BC935817892D231"
				type: "xp"
				xp: 100
			}]
		}
		{
			icon: "minecraft:writable_book"
			x: -0.5d
			y: 6.0d
			description: [
				"Challenges are gonna change a lot. Those that are here right now, are gonna be in new section: Tasks! It will give a tutorial how to do a program so people can see how to write code"
				""
				"Challenges are gonna be hard from the beggining. Probably I will do 2 types of them: "
				"basic -> Can be done w/o knowledge from somewhere else "
				"advanced -> For advanced Users only, Requires usage of Wiki and Lua Docs, and probably experience for few of them"
				""
				"PS: For anyone that sees this. If you have any idea for quest requiremt for completion or better icon, I would aprreciate that ^^\""
				""
				"And about lua basics. I'm planing to add few more quests, talking about loops, function IF and searching for functions at wikis etc. Shouldn't be more than 10 quests (without those ones that have Variables Types) for entire Lua Basics"
			]
			min_width: 350
			id: "422379AAF05456FC"
			tasks: [{
				id: "347BE76BC944769F"
				type: "custom"
				title: "Note"
			}]
		}
		{
			icon: "minecraft:writable_book"
			x: 0.0d
			y: -3.0d
			shape: "octagon"
			subtitle: "Lua Basics - Coding practice"
			description: [
				"Here are a few easy tasks that will show you simple programs, to teach you practically how to do some stuff."
				""
				"More tasks will get unlocked, the more you advance in Lua Basics! It's recommended to do them as soon as possible, so you will practice stuff you learned as you go :D"
			]
			dependencies: [
				"2D79E4D126EE389E"
				"6A987EA5C795264E"
			]
			hide: true
			size: 1.5d
			min_width: 250
			id: "4B5728FBD119B4B7"
			tasks: [{
				id: "3E2B04698DC03A84"
				type: "checkmark"
				title: "Tasks!"
			}]
		}
		{
			title: "Variables Types - In General"
			icon: "computercraft:printed_page"
			x: 5.5d
			y: -5.75d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"Every variable has its own type that determines what it stores and what you can do to it."
				""
				"In Lua there is 8 variable types, however I will cover only 6 because 2 of them aren't that useful in ComputerCraft, and require much more knowledge."
				""
				"Lua, whenever you are trying to do something that is designed for different type of variable, will try to convert variable you use to the type it needs to be. Of course it will not success 100%, because sometimes its impossible to convert. In this case it will crash the program and give error about illegal function on that type of the variable."
				""
				"There are few ways to convert manually one type to another, but its not that useful in stuff we are gonna do, and can be found in Official Lua Docs."
				""
				"Note: If you already know Integrated Dynamics' variable types, a lot of ComputerCraft ones are really similiar. On the last line of every type quest there is a note saying what type of Variable is that in ID :wink: -- need feedback about this, should I add this or its kinda pointless?"
				"TODO: Link to the site with convert Functions"
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 375
			id: "356E3B812A576EF7"
			tasks: [{
				id: "01B3465E67E41884"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Type: Nil"
			icon: "computercraft:printed_page"
			x: 8.0d
			y: -4.0d
			subtitle: "Lua Basics #1 - Variable types"
			description: [
				"Nil is a variable type and variable value. It means literally \"nothing\" in code. Variable with type nil, asked for their type and what they're storing, will return nil."
				""
				"● Nil is useful when you need to clear some variable after use."
				""
				"> x = nil"
				""
				"● This will set type and value of x as nil, setting it like it was just created in that line."
				""
				"Also some functions, when they don't find anything you asked for, they will return nil."
			]
			dependencies: ["29C780353E7FB720"]
			min_width: 400
			id: "1BFF3074E9708917"
			tasks: [{
				id: "401DE5F2E19708E0"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Creating your own functions"
			icon: "computercraft:printed_pages"
			x: 8.0d
			y: -2.0d
			subtitle: "Lua Basics #2 - Creating functions"
			description: [
				"Creating functions is a little different and more complicated than creating a normal variable. One of main differences is a function you use to create it. To create your own function variable, you use \"function\" command!"
				""
				"> function my_first_function(argument_1,argument_2)"
				""
				"● First argument is a name of your function. Important thing is to add brackets, as you would do while calling a normal one. They have the same purpose here, between them, you put your function's arguments!"
				""
				"You can add as many arguments as you want, and to separate them you use commas. Arguments work like normal variables. However if you call a function and not give it argument it needs, Lua will default that argument to \"nil\" variable. "
				""
				"● Variables that you just created for your function's arguments are temporary, they can not be used in any other place than that one function! Otherwise you use them like normal variables."
				""
				"● Everything you write after brackets is a code that will run when you call your function. There isn't anything more special here except two commands:"
				""
				"> return argument_1 + argument_2"
				"> end"
				""
				"● It was mentioned in few quests that functions can return some variables, and command \"return\" is used to do exactly that. It's arguments are returned to other variable, that is set to have a value of a function."
				""
				"> local x = my_first_function(1,2)"
				"> 3 -> x -- Return added both our arguments (1 and 2) and returned it to variable x."
				""
				"● \"end\" command is to set the end of your function. It is used after the last line of your function's code. To show this, here is our function we just created:"
				""
				"> function my_first_function(argument_1,argument_2)"
				">   return argument_1 + argument_2"
				"> end -- End of function."
				""
				"Important note is that you can use other functions in your function, even if there are created by you! However those need to be written before function that uses them, as Lua reads code from 1st line to last one, so if it sees a function that is created later, it will not know what is it."
			]
			dependencies: [
				"29C780353E7FB720"
				"401DE5F2E19708E0"
				"32E1201F35F1A394"
				"32D28AB681CE8601"
				"00E1D2866C886632"
				"56800F53C736541F"
				"20F5794B8753B648"
				"124F45AFAA7A0206"
				"401DE5F2E19708E0"
			]
			hide: true
			min_width: 450
			id: "5056B0737A8A8D64"
			tasks: [{
				id: "0C2F459BCB9222EC"
				type: "checkmark"
				title: "Got it!"
			}]
		}
		{
			title: "Your first program!"
			icon: "rftoolscontrol:program_card"
			x: -1.5d
			y: -4.5d
			subtitle: "Practice: Variables"
			description: [
				"It's time. We are gonna actually code something!"
				"The program we will create, will use the print() function to write some variable's values on the screen after we modify them."
				""
				"● First thing we need to do, is to create 2 strings, 2 numbers, a boolean and nil variable. Name for each of them is up to you."
				""
				"● Now let's use the print() function to write some text on the screen. However first, we will add one of those strings to the end of the other. Now we can print what we got."
				""
				"● Next thing we would like to print are those numbers. Let's show one of them first, after it the second one, and lastly, let's add them together and print that as well."
				""
				"● Now let's get our nil variable. As you know its empty, but that isn't efficient. Let's store \"Enigmatica 6 is great!\" in it and print it as well."
				""
				"● Lastly let's see the value of our boolean."
				""
				"If everything was done correctly, the screen should have 6 lines printed on it. The first one is two strings. The second and third are numbers with the fourth being the sum of them. The fifth line should be \"Enigmatica 6 is great!\" and the last line should show the value of your boolean (True/False) If thats what you see, congratulations! You created your first program!"
				""
				"Pro Tip: You don't need to do another variable in a few cases like adding 2 variables together. You can do that in the functions argument!"
				"> local number_1, number_2 = 1, 5"
				"> print(number_1 + number_2) -- Writes results on the screen --> 6"
			]
			dependencies: [
				"4B5728FBD119B4B7"
				"32E1201F35F1A394"
				"282439D423FAC52F"
				"32D28AB681CE8601"
				"00E1D2866C886632"
				"56800F53C736541F"
				"20F5794B8753B648"
				"124F45AFAA7A0206"
				"01B3465E67E41884"
				"401DE5F2E19708E0"
			]
			hide: true
			min_width: 425
			id: "5E591D65A5014852"
			tasks: [
				{
					id: "0829D34C8A1B13FA"
					type: "checkmark"
					title: "Got it working!"
					disable_toast: true
				}
				{
					id: "7981535031476D38"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
			]
			rewards: [{
				id: "2FB3304315BB5F48"
				type: "custom"
				title: "I think about giving here one of the scavenging bags. What do you think?"
			}]
		}
		{
			x: 0.5d
			y: 6.0d
			description: [
				"Progression visibility:"
				"Introduction to Lua / Advanced PC \\& Pocket PC / Wikis - Stage 0"
				"Introduction to Lua unlocks Tasks and Lua Basics 1 with its types"
				"Finishing every Lua Basics #1 Unlocks Lua Basics #2 and first task."
				"Finishing Task #1 unlocks coding tips"
				"Lua Basics #2 unlocks Lua Basics #3 and Task #2."
				"Lua Basics #3 Unlocks #4 and Task #3, as well as all Peripherals"
				"And it goes like that until last Lua Basic quest and Task, what unlocks challenges!"
			]
			min_width: 500
			id: "3FBB6584FA19A1D9"
			tasks: [{
				id: "4A951C0D263C371E"
				type: "custom"
				title: "Note 2"
				icon: "computercraft:printed_book"
			}]
		}
		{
			title: "How to use your Computer"
			icon: "computercraft:computer_normal"
			x: 0.0d
			y: 3.0d
			shape: "rsquare"
			subtitle: "It is simpler than you think!"
			description: [
				"The computer that you just created, is actually really similiar to your real PC! It has a screen, main directory, programs, files and console."
				""
				"In ComputerCraft, directory doesn't exist, until something isn't saved in it. That means you can't have empty folders on your computer. However you can have empty files. To see what programs you have on your computer, run \"programs' command. It will print a list of all programs avaiable! Of course you can make your own programs, and that's what, technically, we are gonna do later on."
				""
				"To use any program, you just write its name to the console. Here is a few basic programs you need to know to use your computer and learn more:"
				"> cd *directory* -- Changes what folder you are in. Your main directory is root."
				"> mv *file* *file or directory* -- Used to rename and move files on the disk."
				"> copy *file or directory* *directory* -- Used to copy file/files to other directory"
				"> delete *file or directory* -- Deletes file or directory"
				"> edit -- Runs edit program. This is code editor we will use to code!"
				"> help *program* -- Most useful program on your computer. Gives more detailed information about specified program."
			]
			dependencies: ["2D79E4D126EE389E"]
			size: 1.5d
			min_width: 450
			id: "1FF283A30B6E415C"
			tasks: [
				{
					id: "2F2D30981A0D12B6"
					type: "checkmark"
					title: "Got it!"
				}
				{
					id: "2F63D341529F3534"
					type: "item"
					title: "Computer"
					item: {
						id: "itemfilters:or"
						Count: 1b
						tag: {
							items: [
								{
									id: "computercraft:computer_normal"
									Count: 1b
								}
								{
									id: "computercraft:computer_advanced"
									Count: 1b
								}
							]
						}
					}
				}
			]
		}
		{
			title: "If this is equal 0, then true!"
			icon: "computercraft:printed_pages"
			x: 9.0d
			y: -0.5d
			subtitle: "Lua Basics #3 - If and logic operators"
			description: [
				"\"if\" is another one of most important things in coding. Without it we couldn't be able to create any decisions! \"if\" is used to check if variable is equal, bigger, smaller etc than other variable / value."
				""
				"Usage of \"if\" is actually really similiar to function, but you aren't doing a variable this time! To start creating your decision, you do something like this:"
				""
				"> if (variable_1 == variable_2) then"
				""
				"You could realise that I didn't use single \"=\" sign, and that's not a mistake! You can not use single equal sign in this case, as it is used to assing value to variable, and not to check value! Here is the list of logic operators you can use in Lua:"
			]
			dependencies: ["5056B0737A8A8D64"]
			hide: true
			min_width: 450
			id: "6DF4A8FB92121573"
			tasks: [{
				id: "76DA4E58186F04A0"
				type: "checkmark"
				title: "Got it!"
			}]
		}
	]
}
