diff --git a/build.gradle b/build.gradle
index 8b9f4a1d..9a38b65d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -27,7 +27,7 @@ allprojects {
 	apply from: "https://files.latmod.com/public/markdown-git-changelog.gradle"
 
 	def ENV = System.getenv()
-	version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}"
+	version = "${mod_version}-build.9999"
 	group = project.maven_group
 	archivesBaseName = project.archives_base_name
 
diff --git a/common/src/main/java/dev/latvian/kubejs/script/ScriptManager.java b/common/src/main/java/dev/latvian/kubejs/script/ScriptManager.java
index 907f306d..dc8f9fb6 100644
--- a/common/src/main/java/dev/latvian/kubejs/script/ScriptManager.java
+++ b/common/src/main/java/dev/latvian/kubejs/script/ScriptManager.java
@@ -21,6 +21,7 @@ import java.io.OutputStream;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.HashMap;
+import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Optional;
@@ -125,6 +126,11 @@ public class ScriptManager {
 				KubeJSPlugins.forEachPlugin(plugin -> plugin.addBindings(event));
 				BindingsEvent.EVENT.invoker().accept(event);
 
+				HashSet<String> globals = new HashSet<>();
+				for (Object key : pack.scope.getIds()) {
+					globals.add((String) key);
+				}
+
 				for (ScriptFile file : pack.scripts) {
 					t++;
 					long start = System.currentTimeMillis();
@@ -140,6 +146,13 @@ public class ScriptManager {
 							file.getError().printStackTrace();
 						}
 					}
+
+					for (Object key : pack.scope.getIds()) {
+						if (!globals.contains((String) key)) {
+							type.console.info("- new global variable: " + key);
+							globals.add((String) key);
+						}
+					}
 				}
 			} catch (Throwable ex) {
 				type.console.error("Failed to read script pack " + pack.info.namespace + ": ", ex);
